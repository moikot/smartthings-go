// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// TimeReference time reference
//
// swagger:model TimeReference
type TimeReference string

const (

	// TimeReferenceNow captures enum value "Now"
	TimeReferenceNow TimeReference = "Now"

	// TimeReferenceMidnight captures enum value "Midnight"
	TimeReferenceMidnight TimeReference = "Midnight"

	// TimeReferenceSunrise captures enum value "Sunrise"
	TimeReferenceSunrise TimeReference = "Sunrise"

	// TimeReferenceNoon captures enum value "Noon"
	TimeReferenceNoon TimeReference = "Noon"

	// TimeReferenceSunset captures enum value "Sunset"
	TimeReferenceSunset TimeReference = "Sunset"
)

// for schema
var timeReferenceEnum []interface{}

func init() {
	var res []TimeReference
	if err := json.Unmarshal([]byte(`["Now","Midnight","Sunrise","Noon","Sunset"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		timeReferenceEnum = append(timeReferenceEnum, v)
	}
}

func (m TimeReference) validateTimeReferenceEnum(path, location string, value TimeReference) error {
	if err := validate.EnumCase(path, location, value, timeReferenceEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this time reference
func (m TimeReference) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTimeReferenceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
