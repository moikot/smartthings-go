// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PublicDeviceConfiguration public device configuration
//
// swagger:model PublicDeviceConfiguration
type PublicDeviceConfiguration struct {
	CreateDeviceConfigRequest

	// Secondary namespacing key for grouping presentations (formerly `mnmn`)
	ManufacturerName string `json:"manufacturerName,omitempty"`

	// DEPRECATED: Secondary namespacing key for grouping presentations
	Mnmn string `json:"mnmn,omitempty"`

	// System generated identifier that corresponds to a device presentation (formerly `vid`)
	PresentationID string `json:"presentationId,omitempty"`

	// DEPRECATED: System generated identifier that corresponds to a device presentation
	Vid string `json:"vid,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *PublicDeviceConfiguration) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 CreateDeviceConfigRequest
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.CreateDeviceConfigRequest = aO0

	// AO1
	var dataAO1 struct {
		ManufacturerName string `json:"manufacturerName,omitempty"`

		Mnmn string `json:"mnmn,omitempty"`

		PresentationID string `json:"presentationId,omitempty"`

		Vid string `json:"vid,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.ManufacturerName = dataAO1.ManufacturerName

	m.Mnmn = dataAO1.Mnmn

	m.PresentationID = dataAO1.PresentationID

	m.Vid = dataAO1.Vid

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m PublicDeviceConfiguration) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.CreateDeviceConfigRequest)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)
	var dataAO1 struct {
		ManufacturerName string `json:"manufacturerName,omitempty"`

		Mnmn string `json:"mnmn,omitempty"`

		PresentationID string `json:"presentationId,omitempty"`

		Vid string `json:"vid,omitempty"`
	}

	dataAO1.ManufacturerName = m.ManufacturerName

	dataAO1.Mnmn = m.Mnmn

	dataAO1.PresentationID = m.PresentationID

	dataAO1.Vid = m.Vid

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this public device configuration
func (m *PublicDeviceConfiguration) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with CreateDeviceConfigRequest
	if err := m.CreateDeviceConfigRequest.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *PublicDeviceConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PublicDeviceConfiguration) UnmarshalBinary(b []byte) error {
	var res PublicDeviceConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
