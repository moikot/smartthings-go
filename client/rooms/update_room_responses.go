// Code generated by go-swagger; DO NOT EDIT.

package rooms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/moikot/smartthings-go/models"
)

// UpdateRoomReader is a Reader for the UpdateRoom structure.
type UpdateRoomReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateRoomReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateRoomOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateRoomBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateRoomUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateRoomForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateRoomUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateRoomTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateRoomDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateRoomOK creates a UpdateRoomOK with default headers values
func NewUpdateRoomOK() *UpdateRoomOK {
	return &UpdateRoomOK{}
}

/*UpdateRoomOK handles this case with default header values.

A Room.
*/
type UpdateRoomOK struct {
	Payload *models.Room
}

func (o *UpdateRoomOK) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}/rooms/{roomId}][%d] updateRoomOK  %+v", 200, o.Payload)
}

func (o *UpdateRoomOK) GetPayload() *models.Room {
	return o.Payload
}

func (o *UpdateRoomOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Room)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoomBadRequest creates a UpdateRoomBadRequest with default headers values
func NewUpdateRoomBadRequest() *UpdateRoomBadRequest {
	return &UpdateRoomBadRequest{}
}

/*UpdateRoomBadRequest handles this case with default header values.

Bad request
*/
type UpdateRoomBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *UpdateRoomBadRequest) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}/rooms/{roomId}][%d] updateRoomBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateRoomBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateRoomBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoomUnauthorized creates a UpdateRoomUnauthorized with default headers values
func NewUpdateRoomUnauthorized() *UpdateRoomUnauthorized {
	return &UpdateRoomUnauthorized{}
}

/*UpdateRoomUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateRoomUnauthorized struct {
}

func (o *UpdateRoomUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}/rooms/{roomId}][%d] updateRoomUnauthorized ", 401)
}

func (o *UpdateRoomUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRoomForbidden creates a UpdateRoomForbidden with default headers values
func NewUpdateRoomForbidden() *UpdateRoomForbidden {
	return &UpdateRoomForbidden{}
}

/*UpdateRoomForbidden handles this case with default header values.

Forbidden
*/
type UpdateRoomForbidden struct {
}

func (o *UpdateRoomForbidden) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}/rooms/{roomId}][%d] updateRoomForbidden ", 403)
}

func (o *UpdateRoomForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateRoomUnprocessableEntity creates a UpdateRoomUnprocessableEntity with default headers values
func NewUpdateRoomUnprocessableEntity() *UpdateRoomUnprocessableEntity {
	return &UpdateRoomUnprocessableEntity{}
}

/*UpdateRoomUnprocessableEntity handles this case with default header values.

Unprocessable Entity
*/
type UpdateRoomUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *UpdateRoomUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}/rooms/{roomId}][%d] updateRoomUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateRoomUnprocessableEntity) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateRoomUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoomTooManyRequests creates a UpdateRoomTooManyRequests with default headers values
func NewUpdateRoomTooManyRequests() *UpdateRoomTooManyRequests {
	return &UpdateRoomTooManyRequests{}
}

/*UpdateRoomTooManyRequests handles this case with default header values.

Too many requests
*/
type UpdateRoomTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *UpdateRoomTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}/rooms/{roomId}][%d] updateRoomTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateRoomTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateRoomTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateRoomDefault creates a UpdateRoomDefault with default headers values
func NewUpdateRoomDefault(code int) *UpdateRoomDefault {
	return &UpdateRoomDefault{
		_statusCode: code,
	}
}

/*UpdateRoomDefault handles this case with default header values.

Unexpected error
*/
type UpdateRoomDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the update room default response
func (o *UpdateRoomDefault) Code() int {
	return o._statusCode
}

func (o *UpdateRoomDefault) Error() string {
	return fmt.Sprintf("[PUT /locations/{locationId}/rooms/{roomId}][%d] updateRoom default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateRoomDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateRoomDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
