// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// LocationParentTypes The type of the location's parent.
//
// swagger:model LocationParentTypes
type LocationParentTypes string

const (

	// LocationParentTypesLOCATIONGROUP captures enum value "LOCATIONGROUP"
	LocationParentTypesLOCATIONGROUP LocationParentTypes = "LOCATIONGROUP"

	// LocationParentTypesACCOUNT captures enum value "ACCOUNT"
	LocationParentTypesACCOUNT LocationParentTypes = "ACCOUNT"
)

// for schema
var locationParentTypesEnum []interface{}

func init() {
	var res []LocationParentTypes
	if err := json.Unmarshal([]byte(`["LOCATIONGROUP","ACCOUNT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		locationParentTypesEnum = append(locationParentTypesEnum, v)
	}
}

func (m LocationParentTypes) validateLocationParentTypesEnum(path, location string, value LocationParentTypes) error {
	if err := validate.EnumCase(path, location, value, locationParentTypesEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this location parent types
func (m LocationParentTypes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := validate.MinLength("", "body", string(m), 7); err != nil {
		return err
	}

	if err := validate.MaxLength("", "body", string(m), 14); err != nil {
		return err
	}

	// value enum
	if err := m.validateLocationParentTypesEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
