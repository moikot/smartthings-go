// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AppOAuth app o auth
//
// swagger:model AppOAuth
type AppOAuth struct {

	// A name given to the OAuth Client.
	ClientName string `json:"clientName,omitempty"`

	// A list of redirect URIs.
	// Max Items: 10
	// Min Items: 0
	RedirectUris []strfmt.URI `json:"redirectUris"`

	// A list of SmartThings API OAuth scope identifiers that maybe required to execute your integration.
	Scope []string `json:"scope"`
}

// Validate validates this app o auth
func (m *AppOAuth) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRedirectUris(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AppOAuth) validateRedirectUris(formats strfmt.Registry) error {

	if swag.IsZero(m.RedirectUris) { // not required
		return nil
	}

	iRedirectUrisSize := int64(len(m.RedirectUris))

	if err := validate.MinItems("redirectUris", "body", iRedirectUrisSize, 0); err != nil {
		return err
	}

	if err := validate.MaxItems("redirectUris", "body", iRedirectUrisSize, 10); err != nil {
		return err
	}

	for i := 0; i < len(m.RedirectUris); i++ {

		if err := validate.FormatOf("redirectUris"+"."+strconv.Itoa(i), "body", "uri", m.RedirectUris[i].String(), formats); err != nil {
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *AppOAuth) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AppOAuth) UnmarshalBinary(b []byte) error {
	var res AppOAuth
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
