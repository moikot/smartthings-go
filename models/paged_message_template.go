// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PagedMessageTemplate A simplified Message model which is retured during a list operation.
//
// swagger:model PagedMessageTemplate
type PagedMessageTemplate struct {

	// A globally unique identifier for an app.
	// Required: true
	// Format: uuid
	AppID *strfmt.UUID `json:"appId"`

	// message template key
	// Required: true
	MessageTemplateKey *string `json:"messageTemplateKey"`
}

// Validate validates this paged message template
func (m *PagedMessageTemplate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAppID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMessageTemplateKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PagedMessageTemplate) validateAppID(formats strfmt.Registry) error {

	if err := validate.Required("appId", "body", m.AppID); err != nil {
		return err
	}

	if err := validate.FormatOf("appId", "body", "uuid", m.AppID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *PagedMessageTemplate) validateMessageTemplateKey(formats strfmt.Registry) error {

	if err := validate.Required("messageTemplateKey", "body", m.MessageTemplateKey); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PagedMessageTemplate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PagedMessageTemplate) UnmarshalBinary(b []byte) error {
	var res PagedMessageTemplate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
