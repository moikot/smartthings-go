// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeviceActivity device activity
//
// swagger:model DeviceActivity
type DeviceActivity struct {

	// attribute name
	Attribute string `json:"attribute,omitempty"`

	// capability name
	Capability string `json:"capability,omitempty"`

	// device component ID. Not nullable.
	// Required: true
	Component *string `json:"component"`

	// device component label. Nullable.
	ComponentLabel string `json:"componentLabel,omitempty"`

	// data
	Data map[string]interface{} `json:"data,omitempty"`

	// Device ID
	DeviceID string `json:"deviceId,omitempty"`

	// Device nick name
	DeviceName string `json:"deviceName,omitempty"`

	// Location ID
	LocationID string `json:"locationId,omitempty"`

	// Location name
	LocationName string `json:"locationName,omitempty"`

	// Translated human readable string (localized)
	Text string `json:"text,omitempty"`

	// The IS0-8601 date time strings in UTC of the activity
	// Format: date-time
	Time strfmt.DateTime `json:"time,omitempty"`

	// translated attribute name based on 'Accept-Language' requested in header
	TranslatedAttributeName string `json:"translatedAttributeName,omitempty"`

	// translated attribute value based on 'Accept-Language' requested in header
	TranslatedAttributeValue string `json:"translatedAttributeValue,omitempty"`

	// unit
	Unit string `json:"unit,omitempty"`

	// attribute value
	Value interface{} `json:"value,omitempty"`
}

// Validate validates this device activity
func (m *DeviceActivity) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateComponent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeviceActivity) validateComponent(formats strfmt.Registry) error {

	if err := validate.Required("component", "body", m.Component); err != nil {
		return err
	}

	return nil
}

func (m *DeviceActivity) validateTime(formats strfmt.Registry) error {

	if swag.IsZero(m.Time) { // not required
		return nil
	}

	if err := validate.FormatOf("time", "body", "date-time", m.Time.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeviceActivity) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeviceActivity) UnmarshalBinary(b []byte) error {
	var res DeviceActivity
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
