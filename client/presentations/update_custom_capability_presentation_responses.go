// Code generated by go-swagger; DO NOT EDIT.

package presentations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/moikot/smartthings-go/models"
)

// UpdateCustomCapabilityPresentationReader is a Reader for the UpdateCustomCapabilityPresentation structure.
type UpdateCustomCapabilityPresentationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCustomCapabilityPresentationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCustomCapabilityPresentationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCustomCapabilityPresentationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateCustomCapabilityPresentationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCustomCapabilityPresentationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateCustomCapabilityPresentationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewUpdateCustomCapabilityPresentationUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCustomCapabilityPresentationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateCustomCapabilityPresentationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateCustomCapabilityPresentationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateCustomCapabilityPresentationOK creates a UpdateCustomCapabilityPresentationOK with default headers values
func NewUpdateCustomCapabilityPresentationOK() *UpdateCustomCapabilityPresentationOK {
	return &UpdateCustomCapabilityPresentationOK{}
}

/*UpdateCustomCapabilityPresentationOK handles this case with default header values.

The custom capability presentation
*/
type UpdateCustomCapabilityPresentationOK struct {
	/*Maximum requests allowed within the rate limit window.
	 */
	XRateLimitLimit int64
	/*Remaining requests available within the window.
	 */
	XRateLimitRemaining int64
	/*Time in milliseconds until the current window expires.
	 */
	XRateLimitReset int64

	Payload *models.CapabilityPresentation
}

func (o *UpdateCustomCapabilityPresentationOK) Error() string {
	return fmt.Sprintf("[PUT /capabilities/{capabilityId}/{capabilityVersion}/presentation][%d] updateCustomCapabilityPresentationOK  %+v", 200, o.Payload)
}

func (o *UpdateCustomCapabilityPresentationOK) GetPayload() *models.CapabilityPresentation {
	return o.Payload
}

func (o *UpdateCustomCapabilityPresentationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-RateLimit-Limit
	xRateLimitLimit, err := swag.ConvertInt64(response.GetHeader("X-RateLimit-Limit"))
	if err != nil {
		return errors.InvalidType("X-RateLimit-Limit", "header", "int64", response.GetHeader("X-RateLimit-Limit"))
	}
	o.XRateLimitLimit = xRateLimitLimit

	// response header X-RateLimit-Remaining
	xRateLimitRemaining, err := swag.ConvertInt64(response.GetHeader("X-RateLimit-Remaining"))
	if err != nil {
		return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", response.GetHeader("X-RateLimit-Remaining"))
	}
	o.XRateLimitRemaining = xRateLimitRemaining

	// response header X-RateLimit-Reset
	xRateLimitReset, err := swag.ConvertInt64(response.GetHeader("X-RateLimit-Reset"))
	if err != nil {
		return errors.InvalidType("X-RateLimit-Reset", "header", "int64", response.GetHeader("X-RateLimit-Reset"))
	}
	o.XRateLimitReset = xRateLimitReset

	o.Payload = new(models.CapabilityPresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomCapabilityPresentationBadRequest creates a UpdateCustomCapabilityPresentationBadRequest with default headers values
func NewUpdateCustomCapabilityPresentationBadRequest() *UpdateCustomCapabilityPresentationBadRequest {
	return &UpdateCustomCapabilityPresentationBadRequest{}
}

/*UpdateCustomCapabilityPresentationBadRequest handles this case with default header values.

Bad request
*/
type UpdateCustomCapabilityPresentationBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *UpdateCustomCapabilityPresentationBadRequest) Error() string {
	return fmt.Sprintf("[PUT /capabilities/{capabilityId}/{capabilityVersion}/presentation][%d] updateCustomCapabilityPresentationBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateCustomCapabilityPresentationBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateCustomCapabilityPresentationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomCapabilityPresentationUnauthorized creates a UpdateCustomCapabilityPresentationUnauthorized with default headers values
func NewUpdateCustomCapabilityPresentationUnauthorized() *UpdateCustomCapabilityPresentationUnauthorized {
	return &UpdateCustomCapabilityPresentationUnauthorized{}
}

/*UpdateCustomCapabilityPresentationUnauthorized handles this case with default header values.

Unauthorized
*/
type UpdateCustomCapabilityPresentationUnauthorized struct {
}

func (o *UpdateCustomCapabilityPresentationUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /capabilities/{capabilityId}/{capabilityVersion}/presentation][%d] updateCustomCapabilityPresentationUnauthorized ", 401)
}

func (o *UpdateCustomCapabilityPresentationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCustomCapabilityPresentationForbidden creates a UpdateCustomCapabilityPresentationForbidden with default headers values
func NewUpdateCustomCapabilityPresentationForbidden() *UpdateCustomCapabilityPresentationForbidden {
	return &UpdateCustomCapabilityPresentationForbidden{}
}

/*UpdateCustomCapabilityPresentationForbidden handles this case with default header values.

Forbidden
*/
type UpdateCustomCapabilityPresentationForbidden struct {
}

func (o *UpdateCustomCapabilityPresentationForbidden) Error() string {
	return fmt.Sprintf("[PUT /capabilities/{capabilityId}/{capabilityVersion}/presentation][%d] updateCustomCapabilityPresentationForbidden ", 403)
}

func (o *UpdateCustomCapabilityPresentationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCustomCapabilityPresentationConflict creates a UpdateCustomCapabilityPresentationConflict with default headers values
func NewUpdateCustomCapabilityPresentationConflict() *UpdateCustomCapabilityPresentationConflict {
	return &UpdateCustomCapabilityPresentationConflict{}
}

/*UpdateCustomCapabilityPresentationConflict handles this case with default header values.

Conflict
*/
type UpdateCustomCapabilityPresentationConflict struct {
	Payload *models.ErrorResponse
}

func (o *UpdateCustomCapabilityPresentationConflict) Error() string {
	return fmt.Sprintf("[PUT /capabilities/{capabilityId}/{capabilityVersion}/presentation][%d] updateCustomCapabilityPresentationConflict  %+v", 409, o.Payload)
}

func (o *UpdateCustomCapabilityPresentationConflict) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateCustomCapabilityPresentationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomCapabilityPresentationUnsupportedMediaType creates a UpdateCustomCapabilityPresentationUnsupportedMediaType with default headers values
func NewUpdateCustomCapabilityPresentationUnsupportedMediaType() *UpdateCustomCapabilityPresentationUnsupportedMediaType {
	return &UpdateCustomCapabilityPresentationUnsupportedMediaType{}
}

/*UpdateCustomCapabilityPresentationUnsupportedMediaType handles this case with default header values.

Unsupported Media Type
*/
type UpdateCustomCapabilityPresentationUnsupportedMediaType struct {
	Payload *models.ErrorResponse
}

func (o *UpdateCustomCapabilityPresentationUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[PUT /capabilities/{capabilityId}/{capabilityVersion}/presentation][%d] updateCustomCapabilityPresentationUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *UpdateCustomCapabilityPresentationUnsupportedMediaType) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateCustomCapabilityPresentationUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomCapabilityPresentationUnprocessableEntity creates a UpdateCustomCapabilityPresentationUnprocessableEntity with default headers values
func NewUpdateCustomCapabilityPresentationUnprocessableEntity() *UpdateCustomCapabilityPresentationUnprocessableEntity {
	return &UpdateCustomCapabilityPresentationUnprocessableEntity{}
}

/*UpdateCustomCapabilityPresentationUnprocessableEntity handles this case with default header values.

Unprocessable Entity
*/
type UpdateCustomCapabilityPresentationUnprocessableEntity struct {
	Payload *models.ErrorResponse
}

func (o *UpdateCustomCapabilityPresentationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /capabilities/{capabilityId}/{capabilityVersion}/presentation][%d] updateCustomCapabilityPresentationUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateCustomCapabilityPresentationUnprocessableEntity) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateCustomCapabilityPresentationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomCapabilityPresentationTooManyRequests creates a UpdateCustomCapabilityPresentationTooManyRequests with default headers values
func NewUpdateCustomCapabilityPresentationTooManyRequests() *UpdateCustomCapabilityPresentationTooManyRequests {
	return &UpdateCustomCapabilityPresentationTooManyRequests{}
}

/*UpdateCustomCapabilityPresentationTooManyRequests handles this case with default header values.

Too many requests
*/
type UpdateCustomCapabilityPresentationTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *UpdateCustomCapabilityPresentationTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /capabilities/{capabilityId}/{capabilityVersion}/presentation][%d] updateCustomCapabilityPresentationTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateCustomCapabilityPresentationTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateCustomCapabilityPresentationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCustomCapabilityPresentationDefault creates a UpdateCustomCapabilityPresentationDefault with default headers values
func NewUpdateCustomCapabilityPresentationDefault(code int) *UpdateCustomCapabilityPresentationDefault {
	return &UpdateCustomCapabilityPresentationDefault{
		_statusCode: code,
	}
}

/*UpdateCustomCapabilityPresentationDefault handles this case with default header values.

Unexpected error
*/
type UpdateCustomCapabilityPresentationDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the update custom capability presentation default response
func (o *UpdateCustomCapabilityPresentationDefault) Code() int {
	return o._statusCode
}

func (o *UpdateCustomCapabilityPresentationDefault) Error() string {
	return fmt.Sprintf("[PUT /capabilities/{capabilityId}/{capabilityVersion}/presentation][%d] updateCustomCapabilityPresentation default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateCustomCapabilityPresentationDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateCustomCapabilityPresentationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UpdateCustomCapabilityPresentationBody The capability presentation describes how the capability will look in the app, what actions and states are shown, as well as how conditions and actions are expressed in an automation.
swagger:model UpdateCustomCapabilityPresentationBody
*/
type UpdateCustomCapabilityPresentationBody struct {

	// automation
	Automation *models.AutomationForCapability `json:"automation,omitempty"`

	// dashboard
	Dashboard *models.DashboardForCapability `json:"dashboard,omitempty"`

	// detail view
	DetailView models.DetailViewForCapability `json:"detailView"`
}

// Validate validates this update custom capability presentation body
func (o *UpdateCustomCapabilityPresentationBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAutomation(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDashboard(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDetailView(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateCustomCapabilityPresentationBody) validateAutomation(formats strfmt.Registry) error {

	if swag.IsZero(o.Automation) { // not required
		return nil
	}

	if o.Automation != nil {
		if err := o.Automation.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("capabilityRequestBodyForPUT" + "." + "automation")
			}
			return err
		}
	}

	return nil
}

func (o *UpdateCustomCapabilityPresentationBody) validateDashboard(formats strfmt.Registry) error {

	if swag.IsZero(o.Dashboard) { // not required
		return nil
	}

	if o.Dashboard != nil {
		if err := o.Dashboard.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("capabilityRequestBodyForPUT" + "." + "dashboard")
			}
			return err
		}
	}

	return nil
}

func (o *UpdateCustomCapabilityPresentationBody) validateDetailView(formats strfmt.Registry) error {

	if swag.IsZero(o.DetailView) { // not required
		return nil
	}

	if err := o.DetailView.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("capabilityRequestBodyForPUT" + "." + "detailView")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateCustomCapabilityPresentationBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateCustomCapabilityPresentationBody) UnmarshalBinary(b []byte) error {
	var res UpdateCustomCapabilityPresentationBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
