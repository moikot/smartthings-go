// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DayOfWeek day of week
//
// swagger:model DayOfWeek
type DayOfWeek string

const (

	// DayOfWeekSun captures enum value "Sun"
	DayOfWeekSun DayOfWeek = "Sun"

	// DayOfWeekMon captures enum value "Mon"
	DayOfWeekMon DayOfWeek = "Mon"

	// DayOfWeekTue captures enum value "Tue"
	DayOfWeekTue DayOfWeek = "Tue"

	// DayOfWeekWed captures enum value "Wed"
	DayOfWeekWed DayOfWeek = "Wed"

	// DayOfWeekThu captures enum value "Thu"
	DayOfWeekThu DayOfWeek = "Thu"

	// DayOfWeekFri captures enum value "Fri"
	DayOfWeekFri DayOfWeek = "Fri"

	// DayOfWeekSat captures enum value "Sat"
	DayOfWeekSat DayOfWeek = "Sat"
)

// for schema
var dayOfWeekEnum []interface{}

func init() {
	var res []DayOfWeek
	if err := json.Unmarshal([]byte(`["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dayOfWeekEnum = append(dayOfWeekEnum, v)
	}
}

func (m DayOfWeek) validateDayOfWeekEnum(path, location string, value DayOfWeek) error {
	if err := validate.EnumCase(path, location, value, dayOfWeekEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this day of week
func (m DayOfWeek) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDayOfWeekEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
