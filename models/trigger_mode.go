// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// TriggerMode trigger mode
//
// swagger:model TriggerMode
type TriggerMode string

const (

	// TriggerModeAuto captures enum value "Auto"
	TriggerModeAuto TriggerMode = "Auto"

	// TriggerModeAlways captures enum value "Always"
	TriggerModeAlways TriggerMode = "Always"

	// TriggerModeNever captures enum value "Never"
	TriggerModeNever TriggerMode = "Never"
)

// for schema
var triggerModeEnum []interface{}

func init() {
	var res []TriggerMode
	if err := json.Unmarshal([]byte(`["Auto","Always","Never"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		triggerModeEnum = append(triggerModeEnum, v)
	}
}

func (m TriggerMode) validateTriggerModeEnum(path, location string, value TriggerMode) error {
	if err := validate.EnumCase(path, location, value, triggerModeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this trigger mode
func (m TriggerMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTriggerModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
