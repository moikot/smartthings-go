// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CommandExecutionResult command execution result
//
// swagger:model CommandExecutionResult
type CommandExecutionResult string

const (

	// CommandExecutionResultSuccess captures enum value "Success"
	CommandExecutionResultSuccess CommandExecutionResult = "Success"

	// CommandExecutionResultFailure captures enum value "Failure"
	CommandExecutionResultFailure CommandExecutionResult = "Failure"

	// CommandExecutionResultOffline captures enum value "Offline"
	CommandExecutionResultOffline CommandExecutionResult = "Offline"
)

// for schema
var commandExecutionResultEnum []interface{}

func init() {
	var res []CommandExecutionResult
	if err := json.Unmarshal([]byte(`["Success","Failure","Offline"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		commandExecutionResultEnum = append(commandExecutionResultEnum, v)
	}
}

func (m CommandExecutionResult) validateCommandExecutionResultEnum(path, location string, value CommandExecutionResult) error {
	if err := validate.EnumCase(path, location, value, commandExecutionResultEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this command execution result
func (m CommandExecutionResult) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCommandExecutionResultEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
