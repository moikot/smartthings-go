// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DeviceIntegrationType The type of device integration (may be null).
// If the type is DTH, the device implementation is a groovy Device Handler and the details are in the "dth" field.
// If the type is ENDPOINT_APP, the device implementation is a SmartApp and the details are in the "app" field.
// If the type is IR, the details are in the "ir" field.
// If the type is IR_OCF, the details are in the "irOcf" field.
// If the type is VIPER, the details are in the "viper" field.
//
//
// swagger:model DeviceIntegrationType
type DeviceIntegrationType string

const (

	// DeviceIntegrationTypeBLE captures enum value "BLE"
	DeviceIntegrationTypeBLE DeviceIntegrationType = "BLE"

	// DeviceIntegrationTypeBLED2D captures enum value "BLE_D2D"
	DeviceIntegrationTypeBLED2D DeviceIntegrationType = "BLE_D2D"

	// DeviceIntegrationTypeDTH captures enum value "DTH"
	DeviceIntegrationTypeDTH DeviceIntegrationType = "DTH"

	// DeviceIntegrationTypeENDPOINTAPP captures enum value "ENDPOINT_APP"
	DeviceIntegrationTypeENDPOINTAPP DeviceIntegrationType = "ENDPOINT_APP"

	// DeviceIntegrationTypeHUB captures enum value "HUB"
	DeviceIntegrationTypeHUB DeviceIntegrationType = "HUB"

	// DeviceIntegrationTypeIR captures enum value "IR"
	DeviceIntegrationTypeIR DeviceIntegrationType = "IR"

	// DeviceIntegrationTypeIROCF captures enum value "IR_OCF"
	DeviceIntegrationTypeIROCF DeviceIntegrationType = "IR_OCF"

	// DeviceIntegrationTypeMQTT captures enum value "MQTT"
	DeviceIntegrationTypeMQTT DeviceIntegrationType = "MQTT"

	// DeviceIntegrationTypeOCF captures enum value "OCF"
	DeviceIntegrationTypeOCF DeviceIntegrationType = "OCF"

	// DeviceIntegrationTypePENGYOU captures enum value "PENGYOU"
	DeviceIntegrationTypePENGYOU DeviceIntegrationType = "PENGYOU"

	// DeviceIntegrationTypeVIDEO captures enum value "VIDEO"
	DeviceIntegrationTypeVIDEO DeviceIntegrationType = "VIDEO"

	// DeviceIntegrationTypeVIPER captures enum value "VIPER"
	DeviceIntegrationTypeVIPER DeviceIntegrationType = "VIPER"

	// DeviceIntegrationTypeWATCH captures enum value "WATCH"
	DeviceIntegrationTypeWATCH DeviceIntegrationType = "WATCH"
)

// for schema
var deviceIntegrationTypeEnum []interface{}

func init() {
	var res []DeviceIntegrationType
	if err := json.Unmarshal([]byte(`["BLE","BLE_D2D","DTH","ENDPOINT_APP","HUB","IR","IR_OCF","MQTT","OCF","PENGYOU","VIDEO","VIPER","WATCH"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deviceIntegrationTypeEnum = append(deviceIntegrationTypeEnum, v)
	}
}

func (m DeviceIntegrationType) validateDeviceIntegrationTypeEnum(path, location string, value DeviceIntegrationType) error {
	if err := validate.EnumCase(path, location, value, deviceIntegrationTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this device integration type
func (m DeviceIntegrationType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDeviceIntegrationTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
