// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SliderForAutomationCondition slider for automation condition
//
// swagger:model sliderForAutomationCondition
type SliderForAutomationCondition struct {
	SliderBase

	// value
	// Required: true
	Value Value `json:"value"`

	// value type
	ValueType ValueType `json:"valueType,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *SliderForAutomationCondition) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 SliderBase
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.SliderBase = aO0

	// AO1
	var dataAO1 struct {
		Value Value `json:"value"`

		ValueType ValueType `json:"valueType,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.Value = dataAO1.Value

	m.ValueType = dataAO1.ValueType

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m SliderForAutomationCondition) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.SliderBase)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)
	var dataAO1 struct {
		Value Value `json:"value"`

		ValueType ValueType `json:"valueType,omitempty"`
	}

	dataAO1.Value = m.Value

	dataAO1.ValueType = m.ValueType

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this slider for automation condition
func (m *SliderForAutomationCondition) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with SliderBase
	if err := m.SliderBase.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValueType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SliderForAutomationCondition) validateValue(formats strfmt.Registry) error {

	if err := m.Value.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("value")
		}
		return err
	}

	return nil
}

func (m *SliderForAutomationCondition) validateValueType(formats strfmt.Registry) error {

	if swag.IsZero(m.ValueType) { // not required
		return nil
	}

	if err := m.ValueType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("valueType")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SliderForAutomationCondition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SliderForAutomationCondition) UnmarshalBinary(b []byte) error {
	var res SliderForAutomationCondition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
