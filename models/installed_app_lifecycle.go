// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// InstalledAppLifecycle The installed app lifecycle. The lifecycle will be one of:
// * CREATE - Invoked when an application is created.
// * INSTALL - Invoked when an application is installed.
// * UPDATE - Invoked when an application is updated.
// * DELETE - Invoked when an application is deleted.
// * OTHER -
//
//
// swagger:model InstalledAppLifecycle
type InstalledAppLifecycle string

const (

	// InstalledAppLifecycleCREATE captures enum value "CREATE"
	InstalledAppLifecycleCREATE InstalledAppLifecycle = "CREATE"

	// InstalledAppLifecycleINSTALL captures enum value "INSTALL"
	InstalledAppLifecycleINSTALL InstalledAppLifecycle = "INSTALL"

	// InstalledAppLifecycleUPDATE captures enum value "UPDATE"
	InstalledAppLifecycleUPDATE InstalledAppLifecycle = "UPDATE"

	// InstalledAppLifecycleDELETE captures enum value "DELETE"
	InstalledAppLifecycleDELETE InstalledAppLifecycle = "DELETE"

	// InstalledAppLifecycleOTHER captures enum value "OTHER"
	InstalledAppLifecycleOTHER InstalledAppLifecycle = "OTHER"
)

// for schema
var installedAppLifecycleEnum []interface{}

func init() {
	var res []InstalledAppLifecycle
	if err := json.Unmarshal([]byte(`["CREATE","INSTALL","UPDATE","DELETE","OTHER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		installedAppLifecycleEnum = append(installedAppLifecycleEnum, v)
	}
}

func (m InstalledAppLifecycle) validateInstalledAppLifecycleEnum(path, location string, value InstalledAppLifecycle) error {
	if err := validate.EnumCase(path, location, value, installedAppLifecycleEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this installed app lifecycle
func (m InstalledAppLifecycle) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateInstalledAppLifecycleEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
