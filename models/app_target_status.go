// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AppTargetStatus The registration status of a target url.
//
// swagger:model AppTargetStatus
type AppTargetStatus string

const (

	// AppTargetStatusPENDING captures enum value "PENDING"
	AppTargetStatusPENDING AppTargetStatus = "PENDING"

	// AppTargetStatusCONFIRMED captures enum value "CONFIRMED"
	AppTargetStatusCONFIRMED AppTargetStatus = "CONFIRMED"
)

// for schema
var appTargetStatusEnum []interface{}

func init() {
	var res []AppTargetStatus
	if err := json.Unmarshal([]byte(`["PENDING","CONFIRMED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		appTargetStatusEnum = append(appTargetStatusEnum, v)
	}
}

func (m AppTargetStatus) validateAppTargetStatusEnum(path, location string, value AppTargetStatus) error {
	if err := validate.EnumCase(path, location, value, appTargetStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this app target status
func (m AppTargetStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAppTargetStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
