// Code generated by go-swagger; DO NOT EDIT.

package capabilities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/moikot/smartthings-go/models"
)

// NewCreateCapabilityParams creates a new CreateCapabilityParams object
// with the default values initialized.
func NewCreateCapabilityParams() *CreateCapabilityParams {
	var ()
	return &CreateCapabilityParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateCapabilityParamsWithTimeout creates a new CreateCapabilityParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateCapabilityParamsWithTimeout(timeout time.Duration) *CreateCapabilityParams {
	var ()
	return &CreateCapabilityParams{

		timeout: timeout,
	}
}

// NewCreateCapabilityParamsWithContext creates a new CreateCapabilityParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateCapabilityParamsWithContext(ctx context.Context) *CreateCapabilityParams {
	var ()
	return &CreateCapabilityParams{

		Context: ctx,
	}
}

// NewCreateCapabilityParamsWithHTTPClient creates a new CreateCapabilityParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateCapabilityParamsWithHTTPClient(client *http.Client) *CreateCapabilityParams {
	var ()
	return &CreateCapabilityParams{
		HTTPClient: client,
	}
}

/*CreateCapabilityParams contains all the parameters to send to the API endpoint
for the create capability operation typically these are written to a http.Request
*/
type CreateCapabilityParams struct {

	/*Authorization
	  OAuth token

	*/
	Authorization string
	/*CapabilityRequest*/
	CapabilityRequest *models.CreateCapabilityRequest
	/*Namespace
	  The namespace of the capability

	*/
	Namespace *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create capability params
func (o *CreateCapabilityParams) WithTimeout(timeout time.Duration) *CreateCapabilityParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create capability params
func (o *CreateCapabilityParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create capability params
func (o *CreateCapabilityParams) WithContext(ctx context.Context) *CreateCapabilityParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create capability params
func (o *CreateCapabilityParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create capability params
func (o *CreateCapabilityParams) WithHTTPClient(client *http.Client) *CreateCapabilityParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create capability params
func (o *CreateCapabilityParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the create capability params
func (o *CreateCapabilityParams) WithAuthorization(authorization string) *CreateCapabilityParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the create capability params
func (o *CreateCapabilityParams) SetAuthorization(authorization string) {
	o.Authorization = authorization
}

// WithCapabilityRequest adds the capabilityRequest to the create capability params
func (o *CreateCapabilityParams) WithCapabilityRequest(capabilityRequest *models.CreateCapabilityRequest) *CreateCapabilityParams {
	o.SetCapabilityRequest(capabilityRequest)
	return o
}

// SetCapabilityRequest adds the capabilityRequest to the create capability params
func (o *CreateCapabilityParams) SetCapabilityRequest(capabilityRequest *models.CreateCapabilityRequest) {
	o.CapabilityRequest = capabilityRequest
}

// WithNamespace adds the namespace to the create capability params
func (o *CreateCapabilityParams) WithNamespace(namespace *string) *CreateCapabilityParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the create capability params
func (o *CreateCapabilityParams) SetNamespace(namespace *string) {
	o.Namespace = namespace
}

// WriteToRequest writes these params to a swagger request
func (o *CreateCapabilityParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param Authorization
	if err := r.SetHeaderParam("Authorization", o.Authorization); err != nil {
		return err
	}

	if o.CapabilityRequest != nil {
		if err := r.SetBodyParam(o.CapabilityRequest); err != nil {
			return err
		}
	}

	if o.Namespace != nil {

		// query param namespace
		var qrNamespace string
		if o.Namespace != nil {
			qrNamespace = *o.Namespace
		}
		qNamespace := qrNamespace
		if qNamespace != "" {
			if err := r.SetQueryParam("namespace", qNamespace); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
