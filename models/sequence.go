// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Sequence sequence
//
// swagger:model Sequence
type Sequence string

const (

	// SequenceSerial captures enum value "Serial"
	SequenceSerial Sequence = "Serial"

	// SequenceParallel captures enum value "Parallel"
	SequenceParallel Sequence = "Parallel"
)

// for schema
var sequenceEnum []interface{}

func init() {
	var res []Sequence
	if err := json.Unmarshal([]byte(`["Serial","Parallel"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sequenceEnum = append(sequenceEnum, v)
	}
}

func (m Sequence) validateSequenceEnum(path, location string, value Sequence) error {
	if err := validate.EnumCase(path, location, value, sequenceEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this sequence
func (m Sequence) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSequenceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
