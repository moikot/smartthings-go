// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Room room
//
// swagger:model Room
type Room struct {

	// Not currently in use.
	BackgroundImage string `json:"backgroundImage,omitempty"`

	// The ID of the parent location.
	// Format: uuid
	LocationID strfmt.UUID `json:"locationId,omitempty"`

	// A name given for the room (eg. Living Room)
	Name string `json:"name,omitempty"`

	// The ID of the room.
	// Format: uuid
	RoomID strfmt.UUID `json:"roomId,omitempty"`
}

// Validate validates this room
func (m *Room) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLocationID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoomID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Room) validateLocationID(formats strfmt.Registry) error {

	if swag.IsZero(m.LocationID) { // not required
		return nil
	}

	if err := validate.FormatOf("locationId", "body", "uuid", m.LocationID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *Room) validateRoomID(formats strfmt.Registry) error {

	if swag.IsZero(m.RoomID) { // not required
		return nil
	}

	if err := validate.FormatOf("roomId", "body", "uuid", m.RoomID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Room) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Room) UnmarshalBinary(b []byte) error {
	var res Room
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
