// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IfActionSequence if action sequence
//
// swagger:model IfActionSequence
type IfActionSequence struct {

	// else
	Else Sequence `json:"else,omitempty"`

	// then
	Then Sequence `json:"then,omitempty"`
}

// Validate validates this if action sequence
func (m *IfActionSequence) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateElse(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateThen(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IfActionSequence) validateElse(formats strfmt.Registry) error {

	if swag.IsZero(m.Else) { // not required
		return nil
	}

	if err := m.Else.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("else")
		}
		return err
	}

	return nil
}

func (m *IfActionSequence) validateThen(formats strfmt.Registry) error {

	if swag.IsZero(m.Then) { // not required
		return nil
	}

	if err := m.Then.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("then")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IfActionSequence) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IfActionSequence) UnmarshalBinary(b []byte) error {
	var res IfActionSequence
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
