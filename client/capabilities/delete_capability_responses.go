// Code generated by go-swagger; DO NOT EDIT.

package capabilities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/moikot/smartthings-go/models"
)

// DeleteCapabilityReader is a Reader for the DeleteCapability structure.
type DeleteCapabilityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCapabilityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteCapabilityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteCapabilityUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteCapabilityForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteCapabilityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteCapabilityDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteCapabilityOK creates a DeleteCapabilityOK with default headers values
func NewDeleteCapabilityOK() *DeleteCapabilityOK {
	return &DeleteCapabilityOK{}
}

/*DeleteCapabilityOK handles this case with default header values.

Capability Deleted
*/
type DeleteCapabilityOK struct {
	/*Maximum requests allowed within the rate limit window.
	 */
	XRateLimitLimit int64
	/*Remaining requests available within the window.
	 */
	XRateLimitRemaining int64
	/*Time in milliseconds until the current window expires.
	 */
	XRateLimitReset int64

	Payload models.DeleteNamespaceResponse
}

func (o *DeleteCapabilityOK) Error() string {
	return fmt.Sprintf("[DELETE /capabilities/{capabilityId}/{capabilityVersion}][%d] deleteCapabilityOK  %+v", 200, o.Payload)
}

func (o *DeleteCapabilityOK) GetPayload() models.DeleteNamespaceResponse {
	return o.Payload
}

func (o *DeleteCapabilityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-RateLimit-Limit
	xRateLimitLimit, err := swag.ConvertInt64(response.GetHeader("X-RateLimit-Limit"))
	if err != nil {
		return errors.InvalidType("X-RateLimit-Limit", "header", "int64", response.GetHeader("X-RateLimit-Limit"))
	}
	o.XRateLimitLimit = xRateLimitLimit

	// response header X-RateLimit-Remaining
	xRateLimitRemaining, err := swag.ConvertInt64(response.GetHeader("X-RateLimit-Remaining"))
	if err != nil {
		return errors.InvalidType("X-RateLimit-Remaining", "header", "int64", response.GetHeader("X-RateLimit-Remaining"))
	}
	o.XRateLimitRemaining = xRateLimitRemaining

	// response header X-RateLimit-Reset
	xRateLimitReset, err := swag.ConvertInt64(response.GetHeader("X-RateLimit-Reset"))
	if err != nil {
		return errors.InvalidType("X-RateLimit-Reset", "header", "int64", response.GetHeader("X-RateLimit-Reset"))
	}
	o.XRateLimitReset = xRateLimitReset

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCapabilityUnauthorized creates a DeleteCapabilityUnauthorized with default headers values
func NewDeleteCapabilityUnauthorized() *DeleteCapabilityUnauthorized {
	return &DeleteCapabilityUnauthorized{}
}

/*DeleteCapabilityUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteCapabilityUnauthorized struct {
}

func (o *DeleteCapabilityUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /capabilities/{capabilityId}/{capabilityVersion}][%d] deleteCapabilityUnauthorized ", 401)
}

func (o *DeleteCapabilityUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCapabilityForbidden creates a DeleteCapabilityForbidden with default headers values
func NewDeleteCapabilityForbidden() *DeleteCapabilityForbidden {
	return &DeleteCapabilityForbidden{}
}

/*DeleteCapabilityForbidden handles this case with default header values.

Forbidden
*/
type DeleteCapabilityForbidden struct {
}

func (o *DeleteCapabilityForbidden) Error() string {
	return fmt.Sprintf("[DELETE /capabilities/{capabilityId}/{capabilityVersion}][%d] deleteCapabilityForbidden ", 403)
}

func (o *DeleteCapabilityForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCapabilityNotFound creates a DeleteCapabilityNotFound with default headers values
func NewDeleteCapabilityNotFound() *DeleteCapabilityNotFound {
	return &DeleteCapabilityNotFound{}
}

/*DeleteCapabilityNotFound handles this case with default header values.

Not found
*/
type DeleteCapabilityNotFound struct {
	Payload *models.ErrorResponse
}

func (o *DeleteCapabilityNotFound) Error() string {
	return fmt.Sprintf("[DELETE /capabilities/{capabilityId}/{capabilityVersion}][%d] deleteCapabilityNotFound  %+v", 404, o.Payload)
}

func (o *DeleteCapabilityNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteCapabilityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCapabilityDefault creates a DeleteCapabilityDefault with default headers values
func NewDeleteCapabilityDefault(code int) *DeleteCapabilityDefault {
	return &DeleteCapabilityDefault{
		_statusCode: code,
	}
}

/*DeleteCapabilityDefault handles this case with default header values.

Unexpected error
*/
type DeleteCapabilityDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the delete capability default response
func (o *DeleteCapabilityDefault) Code() int {
	return o._statusCode
}

func (o *DeleteCapabilityDefault) Error() string {
	return fmt.Sprintf("[DELETE /capabilities/{capabilityId}/{capabilityVersion}][%d] deleteCapability default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteCapabilityDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteCapabilityDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
