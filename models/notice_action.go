// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// NoticeAction An action the user can take to resolve a notice
//
// swagger:model NoticeAction
type NoticeAction string

const (

	// NoticeActionDISMISS captures enum value "DISMISS"
	NoticeActionDISMISS NoticeAction = "DISMISS"

	// NoticeActionEDIT captures enum value "EDIT"
	NoticeActionEDIT NoticeAction = "EDIT"

	// NoticeActionNONE captures enum value "NONE"
	NoticeActionNONE NoticeAction = "NONE"
)

// for schema
var noticeActionEnum []interface{}

func init() {
	var res []NoticeAction
	if err := json.Unmarshal([]byte(`["DISMISS","EDIT","NONE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		noticeActionEnum = append(noticeActionEnum, v)
	}
}

func (m NoticeAction) validateNoticeActionEnum(path, location string, value NoticeAction) error {
	if err := validate.EnumCase(path, location, value, noticeActionEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this notice action
func (m NoticeAction) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateNoticeActionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
