// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// NoticeCode * USER_PAUSE - Denotes installed app is paused by the user and user action is required to unpause it.
// * REVISIT - Denotes installed app is still running and user action may be required to reconcile a configuration.
// * RECONFIGURE - Denotes installed app is no longer running and user action is required to resolve a configuration issue.
//
//
// swagger:model NoticeCode
type NoticeCode string

const (

	// NoticeCodeUSERPAUSE captures enum value "USER_PAUSE"
	NoticeCodeUSERPAUSE NoticeCode = "USER_PAUSE"

	// NoticeCodeREVISIT captures enum value "REVISIT"
	NoticeCodeREVISIT NoticeCode = "REVISIT"

	// NoticeCodeRECONFIGURE captures enum value "RECONFIGURE"
	NoticeCodeRECONFIGURE NoticeCode = "RECONFIGURE"
)

// for schema
var noticeCodeEnum []interface{}

func init() {
	var res []NoticeCode
	if err := json.Unmarshal([]byte(`["USER_PAUSE","REVISIT","RECONFIGURE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		noticeCodeEnum = append(noticeCodeEnum, v)
	}
}

func (m NoticeCode) validateNoticeCodeEnum(path, location string, value NoticeCode) error {
	if err := validate.EnumCase(path, location, value, noticeCodeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this notice code
func (m NoticeCode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateNoticeCodeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
