// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AppUISettings A collection of settings to drive user interface in SmartThings clients.  Currently, only applicable for
// LAMBDA_SMART_APP and WEBHOOK_SMART_APP app types.
//
//
// swagger:model AppUISettings
type AppUISettings struct {

	// dashboard cards enabled
	// Required: true
	DashboardCardsEnabled *bool `json:"dashboardCardsEnabled"`

	// plugin Id
	PluginID string `json:"pluginId,omitempty"`

	// plugin Uri
	// Format: uri
	PluginURI strfmt.URI `json:"pluginUri,omitempty"`

	// pre install dashboard cards enabled
	// Required: true
	PreInstallDashboardCardsEnabled *bool `json:"preInstallDashboardCardsEnabled"`
}

// Validate validates this app UI settings
func (m *AppUISettings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDashboardCardsEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePluginURI(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePreInstallDashboardCardsEnabled(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AppUISettings) validateDashboardCardsEnabled(formats strfmt.Registry) error {

	if err := validate.Required("dashboardCardsEnabled", "body", m.DashboardCardsEnabled); err != nil {
		return err
	}

	return nil
}

func (m *AppUISettings) validatePluginURI(formats strfmt.Registry) error {

	if swag.IsZero(m.PluginURI) { // not required
		return nil
	}

	if err := validate.FormatOf("pluginUri", "body", "uri", m.PluginURI.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *AppUISettings) validatePreInstallDashboardCardsEnabled(formats strfmt.Registry) error {

	if err := validate.Required("preInstallDashboardCardsEnabled", "body", m.PreInstallDashboardCardsEnabled); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AppUISettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AppUISettings) UnmarshalBinary(b []byte) error {
	var res AppUISettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
